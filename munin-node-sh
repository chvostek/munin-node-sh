#!/bin/sh

function config_df() {
  cat <<-EOT
    graph_title Filesystem usage in percent
    graph_args --upper-limit 100 -l 0
    graph_vlabel %
    graph_category disk
    graph_scale no
    graph_info This graph shows disk usage on the machine.
    EOT
  df | sed 1d | while read fs size used avail cap mountpoint; do
    cap="${cap%%%}"
    cat <<-EOT
      ${fs}.label $fs
      ${fs}.info $fs
      ${fs}.warning ${df_warning:-92}
      ${fs}.critical ${df_critical:-98}
      EOT
  done
}
function fetch_df() {
  for fs in $(df -P | grep '^/' | sed '/\/[a-z0-9]*$/!d;s/.* \([a-z0-9\/]\{1,\}\)$/\1/g')
  do
    PINFO=$(df -P $fs | tail -1);
    PNAME=$(echo $PINFO | cut -d\  -f1 | sed 's/[\/.-]/_/g')
    echo "$PNAME.value" $(echo $PINFO | cut -f5 -d\  | sed -e 's/\%//g')
  done
  df | sed 1d | while read fs size used avail cap mountpoint; do
    echo "${fs}.value $cap"
  done
}
function config_zfslist() {
}
function fetch_zfslist() {
}
function config_cpu() {
}
function fetch_cpu() {
}
function config_if_() {
}
function fetch_if_() {
}
function config_if_err_() {
}
function fetch_if_err_() {
}
function config_load() {
}
function fetch_load() {
}
function config_memory() {
}
function fetch_memory() {
}
function config_swap() {
}
function fetch_swap() {
}
function config_processes() {
}
function fetch_processes() {
}
function config_netstat() {
}
function fetch_netstat() {
}
function config_uptime() {
}
function fetch_uptime() {
}


echo "# munin node at `hostname`"

# Defaults
plugins="/usr/local/etc/munin/plugins/"
version="unknown"

# TODO: Find our config file and slurp it in

unset MUNIN_CAP_MULTIGRAPH MUNIN_CAP_DIRTYCONFIG

while read command arg; do
  command="${command%}"; arg="${arg%}"
  logger "command=$command arg=$arg"
  case "$command" in
    cap.*multigraph)  MUNIN_CAP_MULTIGRAPH=1 ;&
    cap.*dirtyconfig) MUNIN_CAP_DIRTYCONFIG=1 ;&
    cap)
      echo "${MUNIN_CAP_MULTIGRAPH:+multigraph} ${MUNIN_CAP_DIRTYCONFIG:+dirtyconfig}"
      ;;
    list)
      # list
      cd "$plugins" && echo *
      ;;
    nodes)
      # list available nodes
      hostname
      echo "."
      ;;
    config*)
      # run plugin config
      case "$arg" in
        df|zfslist|cpu|if_*|load|memory|swap|processes|netstat|uptime)
          config_$arg
          if [ $MUNIN_CAP_MULTIGRAPH = 1 ]; then
            fetch_$arg
          fi
          ;;
        *)
          if [ ! -f "$plugins/$arg" ]; then
            echo "# Unknown service"
            echo "."
            continue
          fi
          plugin="${arg%% *}"
          "$plugins/$plugin" config
          echo "."
          ;;
      esac
      ;;
    fetch*)
      # fetch values
      plugin="${arg%% *}"
      if [ ! -f "$plugins/$plugin" ]; then
        echo "# Unknown service"
        echo "."
        continue
      fi
      "$plugins/$plugin"
      echo "."
      ;;
    version)
      echo "munin-node-sh on `hostname -s` version: $version"
      ;;
    quit)
      break
      ;;
    *)
      echo "# Unknown command. Try cap, list, nodes, config, fetch, version or quit"
      ;;
  esac
done

